if (BUILD_SHARED)
    if (USE_MKL)
        link_directories(${MKLROOT}/lib/intel64)
        if (MKLROOT MATCHES "(oneapi|oneAPI)")
            if ((COMPILER_IDENTIFIER MATCHES "gcc-linux") OR (COMPILER_IDENTIFIER MATCHES "gcc-mac"))
                find_library(IOMPPATH iomp5 ${MKLROOT}/../../compiler/latest/linux/compiler/lib/intel64_lin)
                get_filename_component(IOMPPATH ${IOMPPATH} DIRECTORY)
                link_directories(${IOMPPATH})
                link_libraries(mkl_intel_lp64 mkl_intel_thread mkl_core iomp5 m)
            elseif (COMPILER_IDENTIFIER MATCHES "gcc-win")
                link_libraries(mkl_rt)
            elseif (COMPILER_IDENTIFIER MATCHES "vs")
                find_library(IOMPPATH libiomp5md ${MKLROOT}/../../compiler/latest/windows/compiler/lib/intel64_win)
                get_filename_component(IOMPPATH ${IOMPPATH} DIRECTORY)
                link_directories(${IOMPPATH})
                set(DSUFIX "_dll")
                link_libraries(mkl_intel_lp64${DSUFIX} mkl_intel_thread${DSUFIX} mkl_core${DSUFIX} libiomp5md)
            endif ()
        else ()
            if ((COMPILER_IDENTIFIER MATCHES "gcc-linux") OR (COMPILER_IDENTIFIER MATCHES "gcc-mac"))
                find_library(IOMPPATH iomp5 ${MKLROOT}/../lib/intel64)
                get_filename_component(IOMPPATH ${IOMPPATH} DIRECTORY)
                link_directories(${IOMPPATH})
                link_libraries(mkl_intel_lp64 mkl_intel_thread mkl_core iomp5 m)
            elseif (COMPILER_IDENTIFIER MATCHES "gcc-win")
                link_libraries(mkl_rt)
            elseif (COMPILER_IDENTIFIER MATCHES "vs")
                find_library(IOMPPATH libiomp5md ${MKLROOT}/../compiler/lib/intel64)
                get_filename_component(IOMPPATH ${IOMPPATH} DIRECTORY)
                link_directories(${IOMPPATH})
                set(DSUFIX "_dll")
                link_libraries(mkl_intel_lp64${DSUFIX} mkl_intel_thread${DSUFIX} mkl_core${DSUFIX} libiomp5md)
            endif ()
        endif ()
    else ()
        if (CMAKE_Fortran_COMPILER_ID MATCHES "GNU") # GNU GCC COMPILER
            link_libraries(pthread gfortran quadmath openblas)
        else () # MSVC COMPILER
            link_libraries(libopenblas)
        endif ()
    endif ()
endif ()