name: Stable
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
jobs:
  ubuntu-master:
    runs-on: ubuntu-22.04
    timeout-minutes: 60
    strategy:
      matrix:
        avx: [ ON, OFF ]
        vtk: [ ON, OFF ]
        mkl: [ ON, OFF ]
    steps:
      - name: Clone
        uses: actions/checkout@v4
      - name: Golang
        uses: actions/setup-go@v4
        with:
          cache: false
      - name: Flag
        run: |
          echo "SP_TIME=daily-$(date +''%Y%m%d%H'')" >> $GITHUB_ENV
          echo "PUB=OFF" >> "$GITHUB_ENV"
      - name: VTK
        if: matrix.vtk == 'ON'
        run: |
          wget -q https://github.com/TLCFEM/prebuilds/releases/download/latest/VTK-9.2.6-linux.tar.gz
          tar xf VTK-9.2.6-linux.tar.gz
      - name: MKL
        if: matrix.mkl == 'ON'
        run: |
          wget -O- https://apt.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB | gpg --dearmor | sudo tee /usr/share/keyrings/oneapi-archive-keyring.gpg > /dev/null
          echo "deb [signed-by=/usr/share/keyrings/oneapi-archive-keyring.gpg] https://apt.repos.intel.com/oneapi all main" | sudo tee /etc/apt/sources.list.d/oneAPI.list
          sudo apt-get update && sudo apt-get install intel-oneapi-mkl-devel
      - name: Dependency
        run: |
          sudo apt-get update && sudo apt-get install mesa-common-dev mesa-utils freeglut3-dev libglvnd-dev dpkg-dev xz-utils
      - name: Compile
        run: |
          go build Checker/updater.go
          mkdir build && cd build
          cmake -DCMAKE_BUILD_TYPE=Release -DUSE_AVX=${{ matrix.avx }} -DBUILD_MULTITHREAD=ON -DUSE_EXTERNAL_VTK=${{ matrix.vtk }} -DVTK_DIR=/home/runner/work/suanPan/suanPan/lib/cmake/vtk-9.2/ -DUSE_MKL=${{ matrix.mkl }} -DMKLROOT=/opt/intel/oneapi/mkl/latest/ -DLINK_DYNAMIC_MKL=OFF -DUSE_INTEL_OPENMP=OFF -DCMAKE_INSTALL_PREFIX=dist ..
          make install -j"$(nproc)" && make package
      - name: Pack
        run: |
          cp updater build/dist/bin
          file_name="suanPan-linux"
          if [ "${{ matrix.mkl }}" == "ON" ]; then
            file_name+="-mkl"
          else
            file_name+="-openblas"
          fi
          if [ "${{ matrix.vtk }}" == "ON" ]; then
            file_name+="-vtk"
          fi
          if [ "${{ matrix.avx }}" == "OFF" ]; then
            file_name+="-no-avx"
          fi
          file_name+=".tar.gz"
          echo "ARTIFACT=$file_name" >> "$GITHUB_ENV"
          tar czf $file_name -C build/dist .
      - name: Upload
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.ARTIFACT }}
          path: ${{ env.ARTIFACT }}
      - name: Release
        if: env.PUB == 'ON'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ env.ARTIFACT }}
          asset_name: ${{ env.ARTIFACT }}
          tag: ${{ env.SP_TIME }}
          prerelease: true
          overwrite: true
  macos-master:
    runs-on: macos-11
    timeout-minutes: 100
    strategy:
      matrix:
        vtk: [ ON, OFF ]
    steps:
      - name: Clone
        uses: actions/checkout@v4
      - name: Golang
        uses: actions/setup-go@v4
        with:
          cache: false
      - name: Flag
        run: |
          echo "PUB=OFF" >> "$GITHUB_ENV"
      - name: VTK
        if: matrix.vtk == 'ON'
        run: |
          wget -q https://github.com/TLCFEM/prebuilds/releases/download/latest/VTK-9.2.6-macos.tar.gz
          tar xf VTK-9.2.6-macos.tar.gz
          brew install glfw glew
      - name: Compile
        run: |
          echo "SP_TIME=daily-$(date +''%Y%m%d%H'')" >> $GITHUB_ENV
          go build Checker/updater.go
          mkdir build && cd build
          export CC=$(brew --prefix llvm@15)/bin/clang
          export CXX=$(brew --prefix llvm@15)/bin/clang++
          export FC=gfortran-11
          cmake -DCMAKE_C_STANDARD_INCLUDE_DIRECTORIES=$(brew --prefix libomp)/include -DCMAKE_CXX_STANDARD_INCLUDE_DIRECTORIES=$(brew --prefix libomp)/include -DCMAKE_Fortran_STANDARD_INCLUDE_DIRECTORIES=$(brew --prefix libomp)/include -DCMAKE_BUILD_TYPE=Release -DUSE_EXTERNAL_VTK=${{ matrix.vtk }} -DBUILD_MULTITHREAD=ON -DVTK_DIR=/Users/runner/work/suanPan/suanPan/lib/cmake/vtk-9.2/ -DCMAKE_INSTALL_PREFIX=dist ..
          make install -j4
      - name: Pack
        run: |
          cp updater build/dist/bin
          file_name="suanPan-macos-openblas"
          if [ "${{ matrix.vtk }}" == "ON" ]; then
            file_name+="-vtk"
          fi
          file_name+=".tar.gz"
          echo "ARTIFACT=$file_name" >> "$GITHUB_ENV"
          tar czf $file_name -C build/dist .
      - name: Upload
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.ARTIFACT }}
          path: ${{ env.ARTIFACT }}
      - name: Release
        if: env.PUB == 'ON'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ env.ARTIFACT }}
          asset_name: ${{ env.ARTIFACT }}
          tag: ${{ env.SP_TIME }}
          prerelease: true
          overwrite: true
  windows-master:
    runs-on: windows-2022
    timeout-minutes: 120
    strategy:
      matrix:
        avx: [ ON, OFF ]
        vtk: [ ON, OFF ]
    steps:
      - name: Clone
        uses: actions/checkout@v4
      - name: Golang
        uses: actions/setup-go@v4
        with:
          cache: false
      - name: Flag
        shell: bash
        run: |
          echo "PUB=OFF" >> "$GITHUB_ENV"
      - name: VTK
        if: matrix.vtk == 'ON'
        run: |
          C:/msys64/usr/bin/wget.exe -q https://github.com/TLCFEM/prebuilds/releases/download/latest/VTK-9.2.6-win.7z
          7z x VTK-9.2.6-win.7z
      - name: Compile
        run: |
          echo ("SP_TIME=daily-"+(get-date -format "yyyyMMddHH")) >> $env:GITHUB_ENV
          go build Checker/updater.go
          mkdir build && cd build
          cmake -DCMAKE_BUILD_TYPE=Release -DUSE_AVX=${{ matrix.avx }} -DBUILD_MULTITHREAD=ON -DUSE_EXTERNAL_VTK=${{ matrix.vtk }} -DVTK_DIR=D:/a/suanPan/suanPan/lib/cmake/vtk-9.2/ -DCMAKE_INSTALL_PREFIX=dist ..
          cmake --build . --target install --config Release -j 4
      - name: Pack
        shell: bash
        run: |
          cp updater.exe build/dist/bin
          file_name="suanPan-win-openblas"
          if [ "${{ matrix.vtk }}" == "ON" ]; then
            file_name+="-vtk"
          fi
          if [ "${{ matrix.avx }}" == "OFF" ]; then
            file_name+="-no-avx"
          fi
          file_name+=".7z"
          echo "ARTIFACT=$file_name" >> "$GITHUB_ENV"
          cd build/dist/bin
          7z a ../../../$file_name ./*
      - name: Upload
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.ARTIFACT }}
          path: ${{ env.ARTIFACT }}
      - name: Release
        if: env.PUB == 'ON'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ env.ARTIFACT }}
          asset_name: ${{ env.ARTIFACT }}
          tag: ${{ env.SP_TIME }}
          prerelease: true
          overwrite: true
